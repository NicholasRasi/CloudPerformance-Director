- name: Start instances
  hosts: localhost
  gather_facts: true
  vars_files:
    - ./vars/vars.yml
  tasks:
#    # AWS
#    - name: Start the EC2 instances
#      ignore_errors: yes
#      ec2:
#        aws_access_key: "{{ ec2_access_key }}"
#        aws_secret_key: "{{ ec2_secret_key }}"
#        instance_ids: "{{ item.ids }}"
#        region: "{{ item.region }}"
#        state: running
#        wait: True
#        vpc_subnet_id: subnet-29e63245
#        assign_public_ip: yes
#      register: ec2
#      loop: "{{ ec2_instances_list }}"
#    # - debug: msg="ec2 {{ ec2.results }}"
#    - name: Add EC2 instances to host group
#      ignore_errors: yes
#      add_host:
#        hostname: "{{ item.public_ip }}"
#        groupname: "{{ item.region |replace('-', '_') }}"
#        ansible_ssh_private_key_file: "{{ ec2_folder_keys + item.key_name + ec2_key_type }}"
#        ansible_user: "{{ ec2_remote_user }}"
#      loop: "{{ ec2.results |map(attribute='instances') |list |flatten }}"
#    # AZURE
#    - name: Start the Azure instances
#      ignore_errors: yes
#      azure_rm_virtualmachine:
#        resource_group: "{{ az_resource_group }}"
#        name: "{{ item }}"
#      register: az
#      loop: "{{ az_instances_list }}"
#    # - debug: msg="az {{ az.results }}"
#    - name: Add Azure instances to host group
#      ignore_errors: yes
#      add_host:
#        hostname: "{{ item.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }}"
#        groupname: azure
#        ansible_ssh_private_key_file: "{{ az_key_file }}"
#        ansible_user: "{{ az_remote_user }}"
#      loop: "{{ az.results }}"
    # GCP
    - name: Start the GCP instances
      ignore_errors: yes
      gcp_compute_instance:
        name: "{{ item.id }}"
        auth_kind: "{{ gcp_auth_kind }}"
        project: "{{ gcp_project }}"
        zone: "{{ item.zone }}"
        service_account_file: "{{ gcp_service_account_file }}"
        state: present
        status: RUNNING
        machine_type: "{{ item.machine_type }}"
        deletion_protection: no
      #register: gcp_start
      loop: "{{ gcp_instances_list }}"
    #- debug: msg="gcp_start {{ gcp_start }}"
    - name: Wait...
      pause:
        seconds: 20
    - name: Get GCP instances info
      ignore_errors: yes
      gcp_compute_instance:
        name: "{{ item.id }}"
        auth_kind: "{{ gcp_auth_kind }}"
        project: "{{ gcp_project }}"
        zone: "{{ item.zone }}"
        service_account_file: "{{ gcp_service_account_file }}"
        state: present
        status: RUNNING
        exit
        deletion_protection: no
      register: gcp
      loop: "{{ gcp_instances_list }}"
    #- debug: msg="gcp {{ gcp }}"
    - name: Add GCP instances to host group
      ignore_errors: yes
      add_host:
        hostname: "{{ item.networkInterfaces[0].accessConfigs[0].natIP }}"
        groupname: gcp
        ansible_ssh_private_key_file: "{{ gcp_key_file }}"
        ansible_user: "{{ gcp_remote_user }}"
      loop: "{{ gcp.results }}"

- name: Wait for SSH (all)
  hosts: all
  gather_facts: false
  tasks:
    - name: Wait for SSH to come up
      wait_for_connection:
        delay: 10
        timeout: 15

- name: Run test command
  hosts: all
  gather_facts: false
  tasks:
    - name: Run ls
      command: ls
      register: myls
    - debug: msg="the ls was {{ myls.stdout }}"