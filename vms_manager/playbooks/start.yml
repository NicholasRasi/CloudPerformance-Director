- name: Start instances
  hosts: localhost
  gather_facts: true
  vars_files:
    - ./vars/vars.yml
  tasks:
    # AWS
    - name: Start the EC2 instances
      ignore_errors: yes
      ec2:
        aws_access_key: "{{ ec2_access_key }}"
        aws_secret_key: "{{ ec2_secret_key }}"
        instance_ids: "{{ item.ids }}"
        region: "{{ item.region }}"
        state: running
        wait: True
        vpc_subnet_id: subnet-29e63245
        assign_public_ip: yes
      register: ec2
      loop: "{{ ec2_instances_list }}"
    # - debug: msg="ec2 {{ ec2.results }}"
    - name: Add EC2 instances to host group
      ignore_errors: yes
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: "{{ item.region |replace('-', '_') }}"
        ansible_ssh_private_key_file: "{{ ec2_folder_keys + item.key_name + ec2_key_type }}"
        ansible_user: "{{ ec2_remote_user }}"
      loop: "{{ ec2.results |map(attribute='instances') |list |flatten }}"
    # AZURE
    - name: Start the Azure instances
      ignore_errors: yes
      azure_rm_virtualmachine:
        resource_group: "{{ az_resource_group }}"
        name: "{{ item }}"
      register: az
      loop: "{{ az_instances_list }}"
    # - debug: msg="az {{ az.results }}"
    - name: Add Azure instances to host group
      ignore_errors: yes
      add_host:
        hostname: "{{ item.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }}"
        groupname: azure
        ansible_ssh_private_key_file: "{{ az_key_file }}"
        ansible_user: "{{ az_remote_user }}"
      loop: "{{ az.results }}"

- name: Wait for SSH (all)
  hosts: all
  gather_facts: false
  tasks:
    - name: Wait for SSH to come up
      wait_for_connection:
        delay: 10
        timeout: 15

- name: Run test command
  hosts: all
  gather_facts: false
  tasks:
    - name: Run ls
      command: ls
      register: myls
    - debug: msg="the ls was {{ myls.stdout }}"